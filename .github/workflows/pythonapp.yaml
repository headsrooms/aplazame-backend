name: test
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_SERVER: db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: app
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          curl -sSL \
            "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          source "$HOME/.poetry/env"
          poetry config virtualenvs.in-project true
          poetry update
          poetry install
      - name: Run tests
        run: |
          source "$HOME/.poetry/env"
          make test
        env:
          POSTGRES_SERVER: db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: app
          POSTGRES_PORT: 5432
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml